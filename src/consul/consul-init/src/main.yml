- name: "Init FaboOS Service Lifecycle Management"
  hosts: localhost
  gather_facts: yes
  become: true
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:
    - set_fact:
        keycloak_auth_url: "{{ lookup('env', 'KEYCLOAK_AUTHSERVERURL') }}"    # Auth server URL of Keycloak
        consul_url: "{{ lookup('env', 'CONSUL_URL') }}"                       # URL of Consul server
        consul_config_via: "{{ lookup('env', 'CONSUL_CONFIG_VIA') }}"         # Defines how the configuration of Consul is defined (SHARED_VOLUME or ENVIRONMENT_VARIABLES)
        consul_token: "{{ lookup('env', 'CONSUL_TOKEN') }}"                   # Token which will be used if 'consul_config_via' is set to 'ENVIRONMENT_VARIABLES'
        consul_token_file: "/config/consul/root/consul_master_token"          # Path of file which contains consul token if 'consul_config_via' is set to 'SHARED_VOLUME'

    - name: "Check configuration"
      block:
        - name: "Check required environment variables"
          assert:
            that:
              - (keycloak_auth_url is defined) and (keycloak_auth_url|length > 0)
        - name: "Check if 'consul_config_via' has an allowed value"
          assert:
            that:
              - (consul_config_via == 'SHARED_VOLUME') or (consul_config_via == 'ENVIRONMENT_VARIABLES')
            fail_msg: "Variable value must be 'SHARED_VOLUME' or 'ENVIRONMENT_VARIABLES'"

        - name: "Check if environment variable 'CONSUL_TOKEN' is set when 'CONSUL_CONFIG_VIA' is set to 'ENVIRONMENT_VARIABLES'"
          assert:
            that:
              - (consul_token is defined) and (consul_token|length > 0)
            fail_msg: "When Consul is configured via environment variables, environment variable 'CONSUL_TOKEN' must be set"
          when: consul_config_via == 'ENVIRONMENT_VARIABLES'

        - name: "Import Consul configuration from shared volume"
          include_tasks: consul_import_config_shared_volume.yml
          when: consul_config_via == 'SHARED_VOLUME'

    - name: Wait for Keycloak being up
      uri:
        url: "{{ keycloak_auth_url }}/realms/fabos/.well-known/openid-configuration"
        status_code: 200
      register: result
      until: result.status == 200
      retries: 120
      delay: 3

    - name: "Create auth method for Keycloak"
      uri:
        url: "{{ consul_url }}/v1/acl/auth-method"
        method: PUT
        headers:
          authorization: "Bearer {{ consul_token }}"
        body_format: json
        body:
          Name: keycloak
          Type: jwt
          Description: FabOS Keycloak Instance
          Config:
            OIDCDiscoveryURL: "{{ keycloak_auth_url }}/realms/fabos"
            OIDCDiscoveryCACert: ''
            ClaimMappings:
              given_name: first_name
              family_name: last_name
            ListClaimMappings:
              groups: groups
              "/realm_access/roles": resources
        status_code: 200
      register: output_put_auth_method
