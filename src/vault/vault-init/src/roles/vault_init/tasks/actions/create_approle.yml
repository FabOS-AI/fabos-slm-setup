- assert:
    that:
      - (vault_url is defined) and (vault_url|length > 0)
      - (vault_token is defined) and (vault_token|length > 0)
      - (approle_name is defined) and (approle_name|length > 0)
    fail_msg: "Variable must be defined and not empty"

- name: "Create app role '{{ approle_name }}'"
  uri:
    url: "{{ vault_url }}/v1/auth/approle/role/{{ approle_name }}"
    validate_certs: no
    method: POST
    headers:
      Authorization: "Bearer {{ vault_token }}"
    status_code: 200, 204
  no_log: false

- name: "Set app role id to app role name '{{ approle_name }}'"
  uri:
    url: "{{ vault_url }}/v1/auth/approle/role/{{ approle_name }}/role-id"
    validate_certs: no
    method: POST
    headers:
      Authorization: "Bearer {{ vault_token }}"
    body_format: json
    body:
      role_id: "{{ approle_name }}"
    status_code: 200, 204
  no_log: false

- name: "Create secret id for app role with id '{{ approle_name }}'"
  uri:
    url: "{{ vault_url }}/v1/auth/approle/role/{{ approle_name }}/secret-id"
    validate_certs: no
    method: POST
    headers:
      Authorization: "Bearer {{ vault_token }}"
    status_code: 200, 204
  register: request_secret_id
  no_log: false

- set_fact:
    role_id: "{{ approle_name }}"
    secret_id: "{{ request_secret_id.json.data.secret_id }}"

- name: "Store app role config into files"
  block:
    - name: "Ensures {{ config_store_directory }} dir exists"
      file:
        path: "{{ config_store_directory }}"
        state: directory
    - name: "Copy role id of app role '{{ approle_name }}' into file '{{ config_store_directory }}/role_id'"
      copy:
        content: "{{ role_id }}"
        dest: "{{ config_store_directory }}/role_id"
    - name: "Copy secret id of app role '{{ approle_name }}' into file '{{ config_store_directory }}/secret_id'"
      copy:
        content: "{{ secret_id }}"
        dest: "{{ config_store_directory }}/secret_id"
  when: (config_store_directory is defined) and (config_store_directory|length > 0)

