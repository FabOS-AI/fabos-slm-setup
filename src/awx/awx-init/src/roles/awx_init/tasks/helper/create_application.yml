- assert:
    that:
      - awx_url
      - awx_username
      - awx_password
      - awx_application_name
      - awx_application_description
      - awx_organization_name

- include_tasks: get_organization.yml

- name: "Delete application '{{ awx_application_name }}' if exists"
  awx.awx.application:
    controller_host: "{{ awx_url }}"
    controller_username: "{{ awx_admin_user }}"
    controller_password: "{{ awx_admin_password }}"
    name: "{{ awx_application_name }}"
    organization: "{{ awx_organization.id }}"
    state: absent

- name: "Create application '{{ awx_application_name }}'"
  uri:
    url: "{{ awx_url }}/api/v2/applications/"
    method: POST
    force_basic_auth: yes
    url_username: "{{ awx_username }}"
    url_password: "{{ awx_password }}"
    body_format: json
    body:
      name: "{{ awx_application_name }}"
      description: "{{ awx_application_description }}"
      client_type: "confidential"
      redirect_uris: ""
      authorization_grant_type: "password"
      skip_authorization: false
      organization: "{{ awx_organization.id }}"
    status_code: 201, 400 # 400 if application exists already
  register: output_create_application
  changed_when: output_create_application.status == 201

- set_fact:
    awx_application_client_id: "{{ output_create_application.json.client_id }}"
    awx_application_client_secret: "{{ output_create_application.json.client_secret }}"
