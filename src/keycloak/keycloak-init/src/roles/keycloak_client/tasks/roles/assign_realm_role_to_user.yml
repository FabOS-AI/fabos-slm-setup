- assert:
    that:
      - (keycloak_auth_url is defined) and (keycloak_auth_url|length > 0)
      - (keycloak_realm is defined) and (keycloak_realm|length > 0)
      - (keycloak_access_token is defined) and (keycloak_access_token|length > 0)
      - (username is defined) and (username|length > 0)
      - (realm_role_name is defined) and (realm_role_name|length > 0)

- name: "Get user '{{ username }}'"
  uri:
    url: "{{ keycloak_auth_url }}/admin/realms/{{ keycloak_realm }}/users?username={{ username }}"
    validate_certs: no
    method: GET
    headers:
      authorization: "Bearer {{ keycloak_access_token }}"
    status_code: 200
  register: output_get_keycloak_user
  no_log: true
- set_fact:
    found_keycloak_user: "{{ output_get_keycloak_user.json | first }}"

- name: "Get realm roles"
  uri:
    url: "{{ keycloak_auth_url }}/admin/realms/{{ keycloak_realm }}/roles"
    method: GET
    headers:
      authorization: "Bearer {{ keycloak_access_token }}"
    status_code: 200
  register: output_get_realm_roles
- set_fact:
    keycloak_realm_role: "{{ output_get_realm_roles.json | json_query(query) | first }} "
  vars:
    query: "[?name=='{{ realm_role_name }}']"

- name: "Map user '{{ found_keycloak_user.username }}' (id: '{{ found_keycloak_user.id }}') to realm role '{{ keycloak_realm_role.name }}' (id: '{{ keycloak_realm_role.id }}')"
  uri:
    url: "{{ keycloak_auth_url }}/admin/realms/{{ keycloak_realm }}/users/{{ found_keycloak_user.id }}/role-mappings/realm"
    validate_certs: no
    method: POST
    headers:
      authorization: "Bearer {{ keycloak_access_token }}"
    body_format: json
    body:
      - id: "{{ keycloak_realm_role.id }}"
        name: "{{ keycloak_realm_role.name }}"
    status_code: 204
