- assert:
    that:
      - (keycloak_auth_url is defined) and (keycloak_auth_url|length > 0)
      - (keycloak_realm is defined) and (keycloak_realm|length > 0)
      - (keycloak_admin_username is defined) and (keycloak_admin_username|length > 0)
      - (keycloak_admin_password is defined) and (keycloak_admin_password|length > 0)
      - (client_with_service_account_id is defined) and (client_with_service_account_id|length > 0)
      - (client_id is defined) and (client_id|length > 0)
      - (client_role_name is defined) and (client_role_name|length > 0)

- include_tasks: authentication/get_admin_access_token.yml

### Get client with enabled service accounts
- name: "Get Client '{{ client_with_service_account_id }}'"
  uri:
    url: "{{ keycloak_auth_url }}/admin/realms/{{ keycloak_realm }}/clients?clientId={{ client_with_service_account_id }}"
    validate_certs: no
    method: GET
    headers:
      authorization: "Bearer {{ keycloak_access_token }}"
    status_code: 200
  register: output_keycloak_client
  no_log: true
- set_fact:
    keycloak_client_with_service_account: "{{ output_keycloak_client.json | first }}"

### Get service account user
- name: "Get Service Account User for client '{{ client_with_service_account_id }}' (UUID: '{{ keycloak_client_with_service_account.id }}')"
  uri:
    url: "{{ keycloak_auth_url }}/admin/realms/{{ keycloak_realm }}/clients/{{ keycloak_client_with_service_account.id }}/service-account-user"
    validate_certs: no
    method: GET
    headers:
      authorization: "Bearer {{ keycloak_access_token }}"
    status_code: 200
  register: output_keycloak_client_service_account_user
  no_log: true
- set_fact:
    keycloak_service_account_user: "{{ output_keycloak_client_service_account_user.json }}"

### Get client with roles to which the service account should be added
- name: "Get Client '{{ client_id }}'"
  uri:
    url: "{{ keycloak_auth_url }}/admin/realms/{{ keycloak_realm }}/clients?clientId={{ client_id }}"
    validate_certs: no
    method: GET
    headers:
      authorization: "Bearer {{ keycloak_access_token }}"
    status_code: 200
  register: output_keycloak_client
  no_log: true
- set_fact:
    keycloak_client: "{{ output_keycloak_client.json | first }}"

- name: "Get Client Role '{{ client_role_name }}'"
  uri:
    url: "{{ keycloak_auth_url }}/admin/realms/{{ keycloak_realm }}/clients/{{ keycloak_client.id }}/roles?search={{ client_role_name }}"
    validate_certs: no
    method: GET
    headers:
      authorization: "Bearer {{ keycloak_access_token }}"
    status_code: 200
  register: output_keycloak_client_roles
  no_log: true
- set_fact:
    keycloak_client_role: "{{ output_keycloak_client_roles.json | first }}"

- name: "Map User to Client Role"
  uri:
    url: "{{ keycloak_auth_url }}/admin/realms/{{ keycloak_realm }}/users/{{ keycloak_service_account_user.id }}/role-mappings/clients/{{ keycloak_client.id }}"
    validate_certs: no
    method: POST
    headers:
      authorization: "Bearer {{ keycloak_access_token }}"
    body_format: json
    body:
      - id: "{{ keycloak_client_role.id }}"
        name: "{{ keycloak_client_role.name }}"
    status_code: 204
